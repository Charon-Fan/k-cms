diff --git a/dist/HierarchicalNamedLayoutStrategy.js b/dist/HierarchicalNamedLayoutStrategy.js
index c8979cd4e1acecc23d9fbe5f6f2f1de152f7b565..24ff7cb8b725c3cd015e6af53525a683547fb826 100644
--- a/dist/HierarchicalNamedLayoutStrategy.js
+++ b/dist/HierarchicalNamedLayoutStrategy.js
@@ -39,6 +39,10 @@ class HierarchicalNamedLayoutStrategy extends LayoutStrategy_1.LayoutStrategy {
         //console.log("Creating level " + path);
         const newPath = dirRoot + "/" + path;
         fs.mkdirSync(newPath, { recursive: true });
+        const indexFileContent = "import DocCardList from '@theme/DocCardList';\n\n<DocCardList />";
+        const indexFilePath = (newPath + "/index.md").replaceAll("//", "/");
+        fs.writeFileSync(indexFilePath, indexFileContent, {});
+
         this.addCategoryMetadata(newPath, order, levelLabel);
         return path;
     }
diff --git a/dist/config/default.docunotion.config.js b/dist/config/default.docunotion.config.js
index 857793f7823fa48716352164b22948395c653ce9..2bb6673141b643b94532bdaafd8b429308193ba8 100644
--- a/dist/config/default.docunotion.config.js
+++ b/dist/config/default.docunotion.config.js
@@ -30,7 +30,7 @@ const defaultConfig = {
         // Regexps plus javascript `import`s that operate on the Markdown output
         embedTweaks_1.imgurGifEmbed,
         embedTweaks_1.gifEmbed,
-        embedTweaks_1.youtubeEmbed,
+        // embedTweaks_1.youtubeEmbed,
         embedTweaks_1.vimeoEmbed,
     ],
 };
diff --git a/dist/plugins/internalLinks.js b/dist/plugins/internalLinks.js
index e2575948b06b9307693161e4945064a55ac3b560..ca3ee201124b5b8846e4d4952798c657a1315c61 100644
--- a/dist/plugins/internalLinks.js
+++ b/dist/plugins/internalLinks.js
@@ -65,7 +65,9 @@ function convertLinkLabel(targetPage, text) {
         return targetPage.nameOrTitle;
 }
 function convertLinkHref(context, targetPage, url) {
-    let convertedLink = context.layoutStrategy.getLinkPathForPage(targetPage);
+    // let convertedLink = context.layoutStrategy.getLinkPathForPage(targetPage);
+    let convertedLink = targetPage.slug;
+
     /*****************************
     NOTE: as of this writing, the official Notion API completely drops links
     to headings, unless they are part of a inline link.
diff --git a/dist/pull.js b/dist/pull.js
index 185f335e9b065aa302ae7d5d5c168dd6f5abdb8f..dce3480056aeb79fd9b480002e1193edf9593595 100644
--- a/dist/pull.js
+++ b/dist/pull.js
@@ -111,6 +111,8 @@ function outputPages(options, config, pages) {
             context.relativeFilePathToFolderContainingPage = Path.dirname(layoutStrategy.getLinkPathForPage(page));
             if (page.type === NotionPage_1.PageType.DatabasePage &&
                 context.options.statusTag != "*" &&
+                // The following code is to display articles in the "Ready For Review" state in the staging environment.
+                ![context.options.statusTag, 'Ready For Review'].includes(page.status)) {
                 page.status !== context.options.statusTag) {
                 (0, log_1.verbose)(`Skipping page because status is not '${context.options.statusTag}': ${page.nameOrTitle}`);
                 ++context.counts.skipped_because_status;